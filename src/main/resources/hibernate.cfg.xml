<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-configuration PUBLIC
    "-//Hibernate/Hibernate Configuration DTD//EN"
    "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
  <session-factory>
    <property name="hibernate.dialect">org.hibernate.dialect.MySQL8Dialect</property>

    <!--<property name="hibernate.connection.datasource">jdbc/deepThoughtDB</property>-->
    <!--Не делать автокоммитты, т.к. мы сами делаем коммит транзакции-->
    <property name="connection.autocommit">false</property>
    <property name="connection.driver_class">com.mysql.jdbc.Driver</property>
    <property name="hibernate.connection.url">jdbc:mysql://localhost:3306/deepThoughtDB</property>
    <property name="hibernate.connection.username">root</property>
    <property name="hibernate.connection.password">228322</property>

    <property name="hbm2ddl.auto">update</property>

    <!--На время разработки(показывает sql)-->
    <property name="show_sql">true</property>
    <property name="format_sql">true</property>
    <!--Делаем хранилище сессии для каждого потока-->
    <property name="hibernate.current_session_context_class">thread</property>

	<!-- Делает возможным установление ленивой загрузки для примитивов-->
      <property name="hibernate.enhancer.enableLazyInitialization">true</property>

	<!-- Отправляем запросы пакетами для экономии производительности -->
	<property name="hibernate.jdbc.batch_size">30</property>

    <!--Апдейт только необходимых свойств-->
    <property name="hibernate.order_updates">false</property>

      <mapping class="ru.projects.prog_ja.model.entity.facts.Facts"/>
      <mapping class="ru.projects.prog_ja.model.entity.facts.FactsTags"/>
      <mapping class="ru.projects.prog_ja.model.entity.tags.Tags"/>
      <mapping class="ru.projects.prog_ja.model.entity.tags.TagCounter"/>
      <mapping class="ru.projects.prog_ja.model.entity.questions.QuestionContent"/>
      <mapping class="ru.projects.prog_ja.model.entity.questions.Questions"/>
      <mapping class="ru.projects.prog_ja.model.entity.questions.QuestionsTags"/>
      <mapping class="ru.projects.prog_ja.model.entity.articles.ArticleContent"/>
      <mapping class="ru.projects.prog_ja.model.entity.articles.ArticleComments"/>
      <mapping class="ru.projects.prog_ja.model.entity.articles.ArticleInfo"/>
      <mapping class="ru.projects.prog_ja.model.entity.articles.ArticlesTags"/>
      <mapping class="ru.projects.prog_ja.model.entity.user.LogInfo"/>
      <mapping class="ru.projects.prog_ja.model.entity.user.UserInfo"/>
      <mapping class="ru.projects.prog_ja.model.entity.answer.Answer"/>
      <mapping class="ru.projects.prog_ja.model.entity.user.UserExtended"/>
      <mapping class="ru.projects.prog_ja.model.entity.user.UserInbox"/>
      <mapping class="ru.projects.prog_ja.model.entity.user.UsersTags"/>
      <mapping class="ru.projects.prog_ja.model.entity.user.UserCounter"/>
      <mapping class="ru.projects.prog_ja.model.entity.problems.Problem"/>
      <mapping class="ru.projects.prog_ja.model.entity.problems.ProblemsUsers"/>
      <mapping class="ru.projects.prog_ja.model.entity.problems.ProblemContent"/>
      <mapping class="ru.projects.prog_ja.model.entity.problems.ProblemsTags"/>


      <!-- DB schema will be updated if needed -->
  </session-factory>
</hibernate-configuration>
